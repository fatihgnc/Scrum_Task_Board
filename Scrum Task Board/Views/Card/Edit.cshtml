@model Scrum_Task_Board.Models.Card

@{
    ViewBag.Title = "Edit Card";
    DateTime myDateTime = DateTime.Now;
    string sqlFormat = myDateTime.ToString("yyyy-MM-dd HH:mm:ss");
}

<h2 class="container">Kartı Düzenle</h2>
<hr />

<!-- form -->
<div class="container">
    @using (Html.BeginForm())
    {
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <!-- başlık -->
        <div class="d-flex justify-content-around row">
            <p class="display-4">gencSoftware</p>
            <p class="display-4">NİTELİK KART</p>
        </div>
        <hr />
        <div class="d-flex justify-content-around row">
            <div style="width: 33%;">
                <!-- kart adı ve uzman -->
                <div class="form-group">
                    <label for="cardName">Kart adı/no: </label>
                    @Html.TextBoxFor(card => card.cardName, new { @class = "form-control", id = "cardName", required = "required" })
                </div>

                <div class="form-group">
                    <label for="cardExpert">Kart Uzmanı: </label>
                    @Html.TextBoxFor(card => card.cardExpert, new { @class = "form-control", id = "cardExpert", required = "required", onkeypress = "return /[a-zA-Zığüşöç\\.\\,\\!\\-; ]/i.test(event.key)" })
                </div>
            </div>

            <div style="width: 33%;">
                <!-- süre kısmı -->
                <div class="form-group">
                    <label for="estimatedTime">Tahmini süre: </label>
                    @Html.TextBoxFor(card => card.cardEstimatedTime, new { @class = "form-control", id = "estimatedTime", @readonly = "readonly" })
                </div>

                <div class="form-group">
                    <label for="actualTime">Gerçekleşen süre: </label>
                    @Html.TextBoxFor(card => card.cardActualTime, new { @class = "form-control", id = "actualTime", @readonly = "readonly" })
                </div>
            </div>

            <div style="width: 33%;">
                <!-- kart no -->
                <div class="form-group">
                    <label for="cardNo">Kart No: </label>
                    @Html.TextBoxFor(card => card.cardNo, new { @class = "form-control", id = "cardNo", required = "required", @type = "number" })
                </div>
            </div>
        </div>

        <div class="d-flex flex-column row">
            <!-- açıklama ve notlar -->
            <div class="form-group">
                <label for="cardExplanation">Kart açıklaması: </label>
                @Html.TextAreaFor(card => card.cardDefinition, new { @class = "form-control", id = "cardDefinition", rows = "5", required = "required", onkeypress = "return /[a-zA-Z0-9ığüşöç\\.\\,\\!\\-; ]/i.test(event.key)" })
            </div>

            <div class="form-group">
                <label for="cardNotes">Kart notları: </label>
                @Html.TextAreaFor(card => card.cardNotes, new { @class = "form-control", id = "cardNotes", rows = "5", required = "required", onkeypress = "return /[a-zA-Z0-9ığüşöç\\.\\,\\!\\-; ]/i.test(event.key)" })
            </div>
        </div>

        @Html.HiddenFor(card => card.cardCreationDate, new { @class = "form-control", id = "creationDate", @readonly = "readonly", @Value = sqlFormat })

        <div class="input-group row">
            <input class="btn btn-success w-100 mt-2" id="submit" type="submit" value="Güncelle" />
        </div>

        <div class="mt-3 row">
            @if (ViewBag.Message != null)
            {
                <span class="alert @ViewBag.Alert" id="editAlert">@ViewBag.Message</span>
            }
        </div>
    }
</div>

